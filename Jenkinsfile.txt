pipeline {
  agent any

  environment {
    BACKEND_IMAGE = 'yourdockerhubuser/myapp-backend'
    FRONTEND_IMAGE = 'yourdockerhubuser/myapp-frontend'
    TAG = 'latest'
    STAGING_USER = 'ubuntu'
    STAGING_HOST = 'localhost'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build & Dockerize Backend') {
      steps {
        dir('D:\my-fullstack-app\backend') {
          sh 'mvn clean package -DskipTests'
          sh "docker build -t ${BACKEND_IMAGE}:${TAG} ."
        }
      }
    }

    stage('Build & Dockerize Frontend') {
      steps {
        dir('frontend') {
          sh 'npm install'
          sh 'npm run build --prod'
          sh "docker build -t ${FRONTEND_IMAGE}:${TAG} ."
        }
      }
    }

    stage('Push Docker Images') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
          sh "docker push ${BACKEND_IMAGE}:${TAG}"
          sh "docker push ${FRONTEND_IMAGE}:${TAG}"
        }
      }
    }

    stage('Deploy to Staging') {
      steps {
        sshagent(['staging-ssh']) {
          sh """
            ssh -o StrictHostKeyChecking=no ${STAGING_USER}@${STAGING_HOST} << 'EOF'
              set -e

              echo '🔄 Cleaning up old containers...'
              docker rm -f my-backend || true
              docker rm -f my-frontend || true
              docker rm -f mysql || true

              echo '📦 Pulling latest images...'
              docker pull ${BACKEND_IMAGE}:${TAG}
              docker pull ${FRONTEND_IMAGE}:${TAG}

              echo '🚀 Starting MySQL...'
              docker run -d --name mysql \\
                -e MYSQL_ROOT_PASSWORD=root \\
                -e MYSQL_DATABASE=demo \\
                -p 3306:3306 mysql:8

              echo '⏳ Waiting for MySQL to initialize...'
              sleep 20

              echo '🚀 Starting backend...'
              docker run -d --name my-backend \\
                --link mysql:mysql \\
                -e MYSQL_URL=jdbc:mysql://mysql:3306/demo \\
                -e MYSQL_USER=root \\
                -e MYSQL_PASSWORD=root \\
                -p 8081:8080 ${BACKEND_IMAGE}:${TAG}

              echo '🚀 Starting frontend...'
              docker run -d --name my-frontend -p 8080:80 ${FRONTEND_IMAGE}:${TAG}

              echo '✅ Deployment completed.'
            EOF
          """
        }
      }
    }
  }

  post {
    success {
      echo '✅ CICD pipeline executed successfully!'
    }
    failure {
      echo '❌ CICD pipeline failed. Check logs for more info.'
    }
  }
}
